"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    "List all posts."
    posts: [Post!]! @all

    "Return single post identified by id."
    post(id: ID! @eq): Post! @find

    "Return simgle Topic identified by slug."
    topic (slug: String! @eq): Topic @find
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!

    posts: [Post!]! @hasMany
}

"Acount of Topics under whicvh Posts can be categorized."
type Topic {
  "Unique primary key"
  id: ID!

  "Unique name."
  name: String!

  "Unique slug."
  slug: String!

  "Posts associated with this topic"
  posts:[Post!]! @hasMany
 
}

type Post {
  id: ID!
  title: String!
  lead: String!

  "When the post was created."
    created_at: DateTime!

    "When the post was last updated."
    updated_at: DateTime!

    author: User! @belongsTo
    topic: Topic! @belongsTo

}
